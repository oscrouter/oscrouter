{"version":3,"sources":["../Servers.js"],"names":["Sockets","constructor","sockets","addUDPPort","bind","port","getSocket","addTCPClient","addTCPServer","removeSocket","type","close","TCPServer","TCPClient","UDP"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,OAAN,CAAc;AACbC,eAAc;AACb,OAAKC,OAAL,GAAe,EAAf;AACA;;AAEDC,YAAWC,IAAX,EAAiBC,IAAjB,EAAuB;AACtB,SAAO,KAAKC,SAAL,CAAe,WAAf,EAA2BF,IAA3B,EAAiCC,IAAjC,CAAP;AACA;;AAEDE,cAAaH,IAAb,EAAmBC,IAAnB,EAAyB;AACxB,SAAO,KAAKC,SAAL,CAAe,WAAf,EAA2BF,IAA3B,EAAiCC,IAAjC,CAAP;AACA;;AAEDG,cAAaJ,IAAb,EAAmBC,IAAnB,EAAyB;AACxB,SAAO,KAAKC,SAAL,CAAe,WAAf,EAA2BF,IAA3B,EAAiCC,IAAjC,CAAP;AACA;;AAEDI,cAAaC,IAAb,EAAmBN,IAAnB,EAAyBC,IAAzB,EAA+B;AAC9B,MAAG,KAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,CAAH,EAAmC;AAClC,QAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,EAA+BM,KAA/B;AACA,UAAO,KAAKT,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,CAAP;AACA;AACD;;AAEDC,WAAUI,IAAV,EAAgBN,IAAhB,EAAsBC,IAAtB,EAA4B;AAC3B,MAAG,CAAC,KAAKH,OAAL,CAAaE,IAAb,CAAJ,EAAwB;AACvB,QAAKF,OAAL,CAAaE,IAAb,IAAqB,EAArB;AACA;AACD,MAAG,CAAC,KAAKF,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,CAAJ,EAA8B;AAC7B,QAAKR,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,IAA2B,EAA3B;AACA;AACD,MAAG,KAAKR,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,CAAH,EAAmC;AAClC,UAAO,KAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,CAAP;AACA;AACD,UAAOK,IAAP;AACC,QAAK,WAAL;AACC,SAAKR,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,IAAiC,IAAIO,mBAAJ,CAAcR,IAAd,EAAoBC,IAApB,CAAjC;AACD;AACA,QAAK,WAAL;AACC,SAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,IAAiC,IAAIQ,mBAAJ,CAAcT,IAAd,EAAoBC,IAApB,CAAjC;AACD;AACA,QAAK,WAAL;AACC,SAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,IAAiC,IAAIS,aAAJ,CAAQV,IAAR,EAAcC,IAAd,CAAjC;AACD;AATD;;AAYA,SAAO,KAAKH,OAAL,CAAaE,IAAb,EAAmBM,IAAnB,EAAyBL,IAAzB,CAAP;AACA;AA/CY;kBAiDC,IAAIL,OAAJ,E","file":"Servers.js","sourcesContent":["\nimport TCPClient from './lib/TCPClient.js'\nimport TCPServer from './lib/TCPServer.js'\nimport UDP from './lib/UDP.js'\n\nclass Sockets {\n\tconstructor() {\n\t\tthis.sockets = {}\n\t}\n\n\taddUDPPort(bind, port) {\n\t\treturn this.getSocket('udpserver',bind, port)\n\t}\n\n\taddTCPClient(bind, port) {\n\t\treturn this.getSocket('tcpclient',bind, port)\n\t}\n\n\taddTCPServer(bind, port) {\n\t\treturn this.getSocket('tcpserver',bind, port)\n\t}\n\n\tremoveSocket(type, bind, port) {\n\t\tif(this.sockets[bind][type][port]) {\n\t\t\tthis.sockets[bind][type][port].close()\n\t\t\tdelete(this.sockets[bind][type][port])\n\t\t}\n\t}\n\n\tgetSocket(type, bind, port) {\n\t\tif(!this.sockets[bind]) {\n\t\t\tthis.sockets[bind] = {}\n\t\t}\n\t\tif(!this.sockets[bind][type]) {\n\t\t\tthis.sockets[bind][type] = {}\n\t\t}\n\t\tif(this.sockets[bind][type][port]) {\n\t\t\treturn this.sockets[bind][type][port];\n\t\t}\n\t\tswitch(type) {\n\t\t\tcase 'tcpserver':\n\t\t\t\tthis.sockets[bind][type][port] = new TCPServer(bind, port)\n\t\t\tbreak;\n\t\t\tcase 'tcpclient':\n\t\t\t\tthis.sockets[bind][type][port] = new TCPClient(bind, port)\n\t\t\tbreak;\n\t\t\tcase 'udpserver':\n\t\t\t\tthis.sockets[bind][type][port] = new UDP(bind, port)\n\t\t\tbreak;\n\t\t}\n\n\t\treturn this.sockets[bind][type][port];\n\t}\n}\nexport default new Sockets()"]}