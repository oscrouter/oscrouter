{"version":3,"sources":["../../lib/TCPClient.js"],"names":["TCPClient","SocketServer","constructor","bind","port","ready","type","client","osc","TCPSocketPort","address","on","bundle","message","error","readyEvent","raw","open","getType","close","logger","log","err","console","data","info","emit","oscBundle","timeTag","send","args","warn"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,SAAN,SAAwBC,sBAAxB,CAAqC;AACnDC,aAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AACvB,QAAMD,IAAN,EAAYC,IAAZ;;AAEA,OAAKC,KAAL,GAAa,KAAb;AACA,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKE,IAAL,GAAY,WAAZ;;AAEA,OAAKC,MAAL,GAAc,IAAIC,cAAIC,aAAR,CAAsB;AACnCC,YAASP,IAD0B;AAEnCC,SAAMA;AAF6B,GAAtB,CAAd;;AAKA,OAAKG,MAAL,CAAYI,EAAZ,CACC,QADD,EAEC,KAAKC,MAAL,CAAYT,IAAZ,CAAiB,IAAjB,CAFD;;AAKA,OAAKI,MAAL,CAAYI,EAAZ,CACC,SADD,EAEC,KAAKE,OAAL,CAAaV,IAAb,CAAkB,IAAlB,CAFD;;AAKA,OAAKI,MAAL,CAAYI,EAAZ,CACC,OADD,EAEC,KAAKG,KAAL,CAAWX,IAAX,CAAgB,IAAhB,CAFD;;AAKA,OAAKI,MAAL,CAAYI,EAAZ,CACC,OADD,EAEC,KAAKI,UAAL,CAAgBZ,IAAhB,CAAqB,IAArB,CAFD;;AAKA,OAAKI,MAAL,CAAYI,EAAZ,CACC,KADD,EAEC,KAAKK,GAAL,CAASb,IAAT,CAAc,IAAd,CAFD;;AAKA,OAAKI,MAAL,CAAYI,EAAZ,CACC,OADD,EAEC,MAAM;AACL,QAAKN,KAAL,GAAa,KAAb;AACA,GAJF;;AAOA,OAAKE,MAAL,CAAYU,IAAZ;AACA;;AAEDC,WAAU;AACT,SAAO,KAAKZ,IAAZ;AACA;;AAEDW,QAAO;AACN,OAAKV,MAAL,CAAYU,IAAZ;AACA;;AAEDE,SAAQ;AACP,OAAKZ,MAAL,CAAYY,KAAZ;AACA;;AAEDJ,cAAa;AACZ,OAAKV,KAAL,GAAa,IAAb;AACAe,mBAAOC,GAAP,CAAW,OAAX,EAAoB,8BAA6B,KAAKlB,IAAK,IAAG,KAAKC,IAAK,EAAxE;AACA;;AAEDU,OAAMQ,GAAN,EAAW;AACVC,UAAQT,KAAR,CAAcQ,GAAd;AACA;;AAEDN,KAAIQ,IAAJ,EAAUC,IAAV,EAAgB;AACf,OAAKC,IAAL,CAAU,KAAV,EAAiBF,IAAjB,EAAuBC,IAAvB,EAA6B,EAACf,SAAS,KAAKP,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7B,EAAoE,KAAKE,IAAzE;AACA;;AAEDM,QAAOe,SAAP,EAAkBC,OAAlB,EAA2BH,IAA3B,EAAiC;AAChC,OAAKC,IAAL,CAAU,QAAV,EAAoBC,SAApB,EAA+BC,OAA/B,EAAwCH,IAAxC,EAA8C,EAACf,SAAS,KAAKP,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA9C,EAAqF,KAAKE,IAA1F;AACA;;AAEDO,SAAQA,OAAR,EAAiBe,OAAjB,EAA0BH,IAA1B,EAAgC;AAC/B,OAAKC,IAAL,CAAU,SAAV,EAAqBb,OAArB,EAA8Be,OAA9B,EAAuCH,IAAvC,EAA6C,EAACf,SAAS,KAAKP,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7C,EAAoF,KAAKE,IAAzF;AACA;;AAEDuB,MAAKnB,OAAL,EAAcoB,IAAd,EAAoB;AACnB,MAAG,CAAC,KAAKzB,KAAT,EAAgB;AACfkB,WAAQQ,IAAR,CAAa,0CAAb;AACA;AACA;AACD,OAAKxB,MAAL,CAAYsB,IAAZ,CAAiB;AAChBnB,UADgB;AAEhBoB;AAFgB,GAAjB;AAIA;AA3FkD;kBAA/B9B,S","file":"TCPClient.js","sourcesContent":["import SocketServer from './SocketServer.js'\nimport osc from 'osc'\nimport logger from './logger.js'\n\nexport default class TCPClient extends SocketServer {\n\tconstructor(bind, port) {\n\t\tsuper(bind, port)\n\n\t\tthis.ready = false\n\t\tthis.bind = bind\n\t\tthis.port = port\n\t\tthis.type = 'tcpclient'\n\n\t\tthis.client = new osc.TCPSocketPort({\n\t\t\taddress: bind,\n\t\t\tport: port\n\t\t});\n\n\t\tthis.client.on(\n\t\t\t\"bundle\",\n\t\t\tthis.bundle.bind(this)\n\t\t)\n\n\t\tthis.client.on(\n\t\t\t\"message\",\n\t\t\tthis.message.bind(this)\n\t\t)\n\n\t\tthis.client.on(\n\t\t\t\"error\",\n\t\t\tthis.error.bind(this)\n\t\t)\n\n\t\tthis.client.on(\n\t\t\t\"ready\",\n\t\t\tthis.readyEvent.bind(this)\n\t\t)\n\n\t\tthis.client.on(\n\t\t\t\"raw\",\n\t\t\tthis.raw.bind(this)\n\t\t)\n\n\t\tthis.client.on(\n\t\t\t\"close\",\n\t\t\t() => {\n\t\t\t\tthis.ready = false\n\t\t\t}\n\t\t)\n\n\t\tthis.client.open();\n\t}\n\n\tgetType() {\n\t\treturn this.type\n\t}\n\n\topen() {\n\t\tthis.client.open()\n\t}\n\n\tclose() {\n\t\tthis.client.close()\n\t}\n\n\treadyEvent() {\n\t\tthis.ready = true\n\t\tlogger.log('debug',`TCP Client is connected to ${this.bind}:${this.port}`)\n\t}\n\n\terror(err) {\n\t\tconsole.error(err)\n\t}\n\n\traw(data, info) {\n\t\tthis.emit('raw', data, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tbundle(oscBundle, timeTag, info) {\n\t\tthis.emit('bundle', oscBundle, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tmessage(message, timeTag, info) {\n\t\tthis.emit('message', message, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tsend(address, args) {\n\t\tif(!this.ready) {\n\t\t\tconsole.warn(\"The server is not ready to send messages\")\n\t\t\treturn\n\t\t}\n\t\tthis.client.send({\n\t\t\taddress,\n\t\t\targs\n\t\t});\n\t}\n}"]}