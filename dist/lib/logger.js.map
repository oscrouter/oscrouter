{"version":3,"sources":["../../src/lib/logger.js"],"names":["logger","winston","createLogger","level","format","json","transports","add","Console","simple"],"mappings":";;;;;;AACA;;;;;;AADA;;AAEA;;;;;;;;AASA,MAAMA,MAAM,GAAGC,kBAAQC,YAAR,CAAqB;AACnCC,EAAAA,KAAK,EAAE,OAD4B;AAEnCC,EAAAA,MAAM,EAAEH,kBAAQG,MAAR,CAAeC,IAAf,EAF2B;AAGnCC,EAAAA,UAAU,EAAE,CACV;AACA;AACA;AACA;AACA;AACA;AANU;AAHuB,CAArB,CAAf,C,CAaA;AACA;AACA;AACA;AACA;;;AACCN,MAAM,CAACO,GAAP,CAAW,IAAIN,kBAAQK,UAAR,CAAmBE,OAAvB,CAA+B;AACzCJ,EAAAA,MAAM,EAAEH,kBAAQG,MAAR,CAAeK,MAAf;AADiC,CAA/B,CAAX,E,CAGD;;kBAEeT,M","sourcesContent":["/* jshint node: true, esversion: 6, -W027, -W119, -W033 */\nimport winston from 'winston'\n/*\nsilly\ndebug\nverbose\ninfo\nwarn\nerror\n */\n\nconst logger = winston.createLogger({\n\tlevel: 'silly',\n\tformat: winston.format.json(),\n\ttransports: [\n\t  //\n\t  // - Write to all logs with level `info` and below to `combined.log` \n\t  // - Write all logs error (and below) to `error.log`.\n\t  //\n\t  //new winston.transports.File({ filename: 'error.log', level: 'error' }),\n\t  //new winston.transports.File({ filename: 'combined.log' })\n\t]\n});\n   \n//\n// If we're not in production then log to the `console` with the format:\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n// \n//if (process.env.NODE_ENV !== 'production') {\n\tlogger.add(new winston.transports.Console({\n\t\tformat: winston.format.simple()\n\t}));\n//}\n\nexport default logger\n"],"file":"logger.js"}