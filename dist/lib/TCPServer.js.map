{"version":3,"sources":["../../lib/TCPServer.js"],"names":["TCPServer","SocketServer","constructor","bind","port","ready","type","clients","netServer","net","createServer","socket","uuid","client","osc","TCPSocketPort","logger","log","on","message","timeTag","info","address","remoteAddress","remotePort","oscBundle","bundle","error","data","raw","open","getType","listen","close","err","console","emit","send","args","next"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,SAAN,SAAwBC,sBAAxB,CAAqC;AACnDC,aAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AACvB,QAAMD,IAAN,EAAYC,IAAZ;;AAEA,OAAKC,KAAL,GAAa,KAAb;AACA,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKE,IAAL,GAAY,WAAZ;AACA,OAAKC,OAAL,GAAe,EAAf;;AAEA,OAAKC,SAAL,GAAiBC,cAAIC,YAAJ,CAAkBC,MAAD,IAAY;AAC7C,SAAMC,OAAO,kBAAb;AACA,SAAMC,SAAS,IAAIC,cAAIC,aAAR,CAAsB;AACpCJ,YAAQA;AAD4B,IAAtB,CAAf;;AAIAK,oBAAOC,GAAP,CAAW,OAAX,EAAoB,2BAA0B,KAAKd,IAAK,IAAG,KAAKC,IAAK,EAArE;;AAEAS,UAAOK,EAAP,CACC,OADD,EAEC,MAAM;AACLF,qBAAOC,GAAP,CAAW,OAAX,EAAoB,gCAA+B,KAAKd,IAAK,IAAG,KAAKC,IAAK,EAA1E;AACA,WAAO,KAAKG,OAAL,CAAaK,IAAb,CAAP;AACA,IALF;;AAQAC,UAAOK,EAAP,CACC,OADD,EAEC,MAAM;AACL,SAAKX,OAAL,CAAaK,IAAb,IAAqBC,MAArB;AACA,IAJF;;AAOAA,UAAOK,EAAP,CACC,SADD,EAEC,CAACC,OAAD,EAAUC,OAAV,EAAmBC,IAAnB,KAA4B;AAC3B,SAAKF,OAAL,CAAaA,OAAb,EAAsBC,OAAtB,EAA+B,EAACE,SAASX,OAAOY,aAAjB,EAAgCnB,MAAMO,OAAOa,UAA7C,EAA/B;AACA,IAJF;;AAOAX,UAAOK,EAAP,CACC,QADD,EAEC,CAACO,SAAD,EAAYL,OAAZ,EAAqBC,IAArB,KAA8B;AAC7B,SAAKK,MAAL,CAAYD,SAAZ,EAAuBL,OAAvB,EAAgC,EAACE,SAASX,OAAOY,aAAjB,EAAgCnB,MAAMO,OAAOa,UAA7C,EAAhC;AACA,IAJF;;AAQAX,UAAOK,EAAP,CACC,OADD,EAEC,KAAKS,KAAL,CAAWxB,IAAX,CAAgB,IAAhB,CAFD;;AAKAU,UAAOK,EAAP,CACC,KADD,EAEC,CAACU,IAAD,EAAOP,IAAP,KAAgB;AACf,SAAKQ,GAAL,CAASD,IAAT,EAAeP,IAAf,EAAqB,EAACC,SAASX,OAAOY,aAAjB,EAAgCnB,MAAMO,OAAOa,UAA7C,EAArB;AACA,IAJF;AAOA,GAlDgB,CAAjB;AAmDA,OAAKM,IAAL;AACA;;AAEDC,WAAU;AACT,SAAO,KAAKzB,IAAZ;AACA;;AAEDwB,QAAO;AACN,OAAKtB,SAAL,CAAewB,MAAf,CAAsB,KAAK5B,IAA3B,EAAiC,KAAKD,IAAtC,EAA4C,MAAM;AACjD,QAAKE,KAAL,GAAa,IAAb;AACAW,oBAAOC,GAAP,CAAW,OAAX,EAAoB,8BAA6B,KAAKd,IAAK,IAAG,KAAKC,IAAK,EAAxE;AACA,GAHD;AAIA;;AAED6B,SAAQ;AACP,OAAKzB,SAAL,CAAeyB,KAAf;AACA;;AAEDN,OAAMO,GAAN,EAAW;AACVC,UAAQR,KAAR,CAAcO,GAAd;AACA;;AAEDL,KAAID,IAAJ,EAAUP,IAAV,EAAgB;AACf,OAAKe,IAAL,CAAU,KAAV,EAAiBR,IAAjB,EAAuBP,IAAvB,EAA6B,EAACC,SAAS,KAAKnB,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7B,EAAoE,KAAKE,IAAzE;AACA;;AAEDoB,QAAOD,SAAP,EAAkBL,OAAlB,EAA2BC,IAA3B,EAAiC;AAChC,OAAKe,IAAL,CAAU,QAAV,EAAoBX,SAApB,EAA+BL,OAA/B,EAAwCC,IAAxC,EAA8C,EAACC,SAAS,KAAKnB,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA9C,EAAqF,KAAKE,IAA1F;AACA;;AAEDa,SAAQA,OAAR,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;AAC/B,OAAKe,IAAL,CAAU,SAAV,EAAqBjB,OAArB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6C,EAACC,SAAS,KAAKnB,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7C,EAAoF,KAAKE,IAAzF;AACA;;AAED+B,MAAKf,OAAL,EAAcgB,IAAd,EAAoB;AACnB,sBACC,KAAK/B,OADN,EAEC,CAACM,MAAD,EAAS0B,IAAT,KAAkB;AACjB1B,UAAOwB,IAAP,CAAY;AACXf,WADW;AAEXgB;AAFW,IAAZ;AAIAC;AACA,GARF;AAUA;AA1GkD;kBAA/BvC,S","file":"TCPServer.js","sourcesContent":["import SocketServer from './SocketServer.js'\nimport osc from 'osc'\nimport net from 'net'\nimport uuidv4 from 'uuid/v4';\nimport each from 'async/each';\nimport logger from './logger.js'\n\nexport default class TCPServer extends SocketServer {\n\tconstructor(bind, port) {\n\t\tsuper(bind, port)\n\n\t\tthis.ready = false\n\t\tthis.bind = bind\n\t\tthis.port = port\n\t\tthis.type = 'tcpserver'\n\t\tthis.clients = []\n\n\t\tthis.netServer = net.createServer((socket) => {\n\t\t\tconst uuid = uuidv4()\n\t\t\tconst client = new osc.TCPSocketPort({\n\t\t\t\tsocket: socket\n\t\t\t});\n\n\t\t\tlogger.log('debug',`TCP Client connected to ${this.bind}:${this.port}`)\n\n\t\t\tclient.on(\n\t\t\t\t\"close\",\n\t\t\t\t() => {\n\t\t\t\t\tlogger.log('debug',`TCP Client disconnected from ${this.bind}:${this.port}`)\n\t\t\t\t\tdelete(this.clients[uuid])\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tclient.on(\n\t\t\t\t\"ready\",\n\t\t\t\t() => {\n\t\t\t\t\tthis.clients[uuid] = client\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tclient.on(\n\t\t\t\t\"message\",\n\t\t\t\t(message, timeTag, info) => {\n\t\t\t\t\tthis.message(message, timeTag, {address: socket.remoteAddress, port: socket.remotePort})\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tclient.on(\n\t\t\t\t\"bundle\",\n\t\t\t\t(oscBundle, timeTag, info) => {\n\t\t\t\t\tthis.bundle(oscBundle, timeTag, {address: socket.remoteAddress, port: socket.remotePort})\n\t\t\t\t}\n\t\t\t)\n\n\n\t\t\tclient.on(\n\t\t\t\t\"error\",\n\t\t\t\tthis.error.bind(this)\n\t\t\t)\n\n\t\t\tclient.on(\n\t\t\t\t\"raw\",\n\t\t\t\t(data, info) => {\n\t\t\t\t\tthis.raw(data, info, {address: socket.remoteAddress, port: socket.remotePort})\n\t\t\t\t}\n\t\t\t)\n\n\t\t});\n\t\tthis.open();\n\t}\n\n\tgetType() {\n\t\treturn this.type\n\t}\n\n\topen() {\n\t\tthis.netServer.listen(this.port, this.bind, () => {\n\t\t\tthis.ready = true\n\t\t\tlogger.log('debug',`TCP Server is listening on ${this.bind}:${this.port}`)\n\t\t});\n\t}\n\n\tclose() {\n\t\tthis.netServer.close()\n\t}\n\n\terror(err) {\n\t\tconsole.error(err)\n\t}\n\n\traw(data, info) {\n\t\tthis.emit('raw', data, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tbundle(oscBundle, timeTag, info) {\n\t\tthis.emit('bundle', oscBundle, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tmessage(message, timeTag, info) {\n\t\tthis.emit('message', message, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tsend(address, args) {\n\t\teach(\n\t\t\tthis.clients,\n\t\t\t(client, next) => {\n\t\t\t\tclient.send({\n\t\t\t\t\taddress,\n\t\t\t\t\targs\n\t\t\t\t});\n\t\t\t\tnext();\n\t\t\t}\n\t\t)\n\t}\n}"]}