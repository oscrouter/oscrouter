{"version":3,"sources":["../../lib/UDP.js"],"names":["UDP","SocketServer","constructor","bind","port","ready","type","server","osc","UDPPort","localAddress","localPort","metadata","on","bundle","message","error","readyEvent","raw","open","getType","close","logger","log","err","console","data","info","emit","address","oscBundle","timeTag","send","args","host","warn"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,GAAN,SAAkBC,sBAAlB,CAA+B;AAC7CC,aAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AACvB,QAAMD,IAAN,EAAYC,IAAZ;;AAEA,OAAKC,KAAL,GAAa,KAAb;AACA,OAAKF,IAAL,GAAYA,IAAZ;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACA,OAAKE,IAAL,GAAY,KAAZ;;AAEA,OAAKC,MAAL,GAAc,IAAIC,cAAIC,OAAR,CAAgB;AAC7BC,iBAAcP,IADe;AAE7BQ,cAAWP,IAFkB;AAG7BQ,aAAU;AAHmB,GAAhB,CAAd;;AAMA,OAAKL,MAAL,CAAYM,EAAZ,CACC,QADD,EAEC,KAAKC,MAAL,CAAYX,IAAZ,CAAiB,IAAjB,CAFD;;AAKA,OAAKI,MAAL,CAAYM,EAAZ,CACC,SADD,EAEC,KAAKE,OAAL,CAAaZ,IAAb,CAAkB,IAAlB,CAFD;;AAKA,OAAKI,MAAL,CAAYM,EAAZ,CACC,OADD,EAEC,KAAKG,KAAL,CAAWb,IAAX,CAAgB,IAAhB,CAFD;;AAKA,OAAKI,MAAL,CAAYM,EAAZ,CACC,OADD,EAEC,KAAKI,UAAL,CAAgBd,IAAhB,CAAqB,IAArB,CAFD;;AAKA,OAAKI,MAAL,CAAYM,EAAZ,CACC,KADD,EAEC,KAAKK,GAAL,CAASf,IAAT,CAAc,IAAd,CAFD;;AAKA,OAAKI,MAAL,CAAYM,EAAZ,CACC,OADD,EAEC,MAAM;AACL,QAAKR,KAAL,GAAa,KAAb;AACA,GAJF;;AAOA,OAAKc,IAAL;AACA;;AAEDC,WAAU;AACT,SAAO,KAAKd,IAAZ;AACA;;AAEDa,QAAO;AACN,OAAKZ,MAAL,CAAYY,IAAZ;AACA;;AAEDE,SAAQ;AACP,OAAKd,MAAL,CAAYc,KAAZ;AACA;;AAEDJ,cAAa;AACZ,OAAKZ,KAAL,GAAa,IAAb;AACAiB,mBAAOC,GAAP,CAAW,OAAX,EAAoB,8BAA6B,KAAKpB,IAAK,IAAG,KAAKC,IAAK,EAAxE;AACA;;AAEDY,OAAMQ,GAAN,EAAW;AACVC,UAAQT,KAAR,CAAcQ,GAAd;AACA;;AAEDN,KAAIQ,IAAJ,EAAUC,IAAV,EAAgB;AACf,OAAKC,IAAL,CAAU,KAAV,EAAiBF,IAAjB,EAAuBC,IAAvB,EAA6B,EAACE,SAAS,KAAK1B,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7B,EAAoE,KAAKE,IAAzE;AACA;;AAEDQ,QAAOgB,SAAP,EAAkBC,OAAlB,EAA2BJ,IAA3B,EAAiC;AAChC,OAAKC,IAAL,CAAU,QAAV,EAAmBE,SAAnB,EAA8BC,OAA9B,EAAuCJ,IAAvC,EAA6C,EAACE,SAAS,KAAK1B,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA7C,EAAoF,KAAKE,IAAzF;AACA;;AAEDS,SAAQA,OAAR,EAAiBgB,OAAjB,EAA0BJ,IAA1B,EAAgC;AAC/B,OAAKC,IAAL,CAAU,SAAV,EAAoBb,OAApB,EAA6BgB,OAA7B,EAAsCJ,IAAtC,EAA4C,EAACE,SAAS,KAAK1B,IAAf,EAAqBC,MAAM,KAAKA,IAAhC,EAA5C,EAAmF,KAAKE,IAAxF;AACA;;AAED0B,MAAKH,OAAL,EAAcI,IAAd,EAAoBC,IAApB,EAA0B9B,IAA1B,EAAgC;AAC/B,MAAG,CAAC,KAAKC,KAAT,EAAgB;AACfoB,WAAQU,IAAR,CAAa,0CAAb;AACA;AACA;AACD,OAAK5B,MAAL,CAAYyB,IAAZ,CAAiB;AAChBH,UADgB;AAEhBI;AAFgB,GAAjB,EAGGC,IAHH,EAGS9B,IAHT;AAIA;AA5F4C;kBAAzBJ,G","file":"UDP.js","sourcesContent":["import SocketServer from './SocketServer.js'\nimport osc from 'osc'\nimport logger from './logger.js'\n\nexport default class UDP extends SocketServer {\n\tconstructor(bind, port) {\n\t\tsuper(bind, port)\n\n\t\tthis.ready = false\n\t\tthis.bind = bind\n\t\tthis.port = port\n\t\tthis.type = 'udp'\n\n\t\tthis.server = new osc.UDPPort({\n\t\t\tlocalAddress: bind,\n\t\t\tlocalPort: port,\n\t\t\tmetadata: true\n\t\t});\n\n\t\tthis.server.on(\n\t\t\t\"bundle\",\n\t\t\tthis.bundle.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"message\",\n\t\t\tthis.message.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"error\",\n\t\t\tthis.error.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"ready\",\n\t\t\tthis.readyEvent.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"raw\",\n\t\t\tthis.raw.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"close\",\n\t\t\t() => {\n\t\t\t\tthis.ready = false\n\t\t\t}\n\t\t)\n\n\t\tthis.open()\n\t}\n\n\tgetType() {\n\t\treturn this.type\n\t}\n\n\topen() {\n\t\tthis.server.open()\n\t}\n\n\tclose() {\n\t\tthis.server.close()\n\t}\n\n\treadyEvent() {\n\t\tthis.ready = true\n\t\tlogger.log('debug',`UDP Server is listening on ${this.bind}:${this.port}`)\n\t}\n\n\terror(err) {\n\t\tconsole.error(err)\n\t}\n\n\traw(data, info) {\n\t\tthis.emit('raw', data, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tbundle(oscBundle, timeTag, info) {\n\t\tthis.emit('bundle',oscBundle, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tmessage(message, timeTag, info) {\n\t\tthis.emit('message',message, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tsend(address, args, host, port) {\n\t\tif(!this.ready) {\n\t\t\tconsole.warn(\"The server is not ready to send messages\")\n\t\t\treturn\n\t\t}\n\t\tthis.server.send({\n\t\t\taddress,\n\t\t\targs\n\t\t}, host, port);\n\t}\n}"]}