{"version":3,"sources":["../../src/lib/UDP.js"],"names":["UDP","SocketServer","constructor","bind","port","ready","type","server","osc","UDPPort","localAddress","localPort","metadata","on","bundle","message","error","readyEvent","raw","open","getType","close","logger","log","err","console","data","info","emit","address","oscBundle","timeTag","send","args","host","warn"],"mappings":"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","sourcesContent":["import SocketServer from './SocketServer.js'\nimport osc from 'osc'\nimport logger from './logger.js'\n\nexport default class UDP extends SocketServer {\n\tconstructor(bind, port) {\n\t\tsuper(bind, port)\n\n\t\tthis.ready = false\n\t\tthis.bind = bind\n\t\tthis.port = port\n\t\tthis.type = 'udp'\n\n\t\tthis.server = new osc.UDPPort({\n\t\t\tlocalAddress: bind,\n\t\t\tlocalPort: port,\n\t\t\tmetadata: true\n\t\t});\n\n\t\tthis.server.on(\n\t\t\t\"bundle\",\n\t\t\tthis.bundle.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"message\",\n\t\t\tthis.message.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"error\",\n\t\t\tthis.error.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"ready\",\n\t\t\tthis.readyEvent.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"raw\",\n\t\t\tthis.raw.bind(this)\n\t\t)\n\n\t\tthis.server.on(\n\t\t\t\"close\",\n\t\t\t() => {\n\t\t\t\tthis.ready = false\n\t\t\t}\n\t\t)\n\n\t\tthis.open()\n\t}\n\n\tgetType() {\n\t\treturn this.type\n\t}\n\n\topen() {\n\t\tthis.server.open()\n\t}\n\n\tclose() {\n\t\tthis.server.close()\n\t}\n\n\treadyEvent() {\n\t\tthis.ready = true\n\t\tlogger.log('debug',`UDP Server is listening on ${this.bind}:${this.port}`)\n\t}\n\n\terror(err) {\n\t\tconsole.error(err)\n\t}\n\n\traw(data, info) {\n\t\tthis.emit('raw', data, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tbundle(oscBundle, timeTag, info) {\n\t\tthis.emit('bundle',oscBundle, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tmessage(message, timeTag, info) {\n\t\tthis.emit('message',message, timeTag, info, {address: this.bind, port: this.port}, this.type)\n\t}\n\n\tsend(address, args, host, port) {\n\t\tif(!this.ready) {\n\t\t\tconsole.warn(\"The server is not ready to send messages\")\n\t\t\treturn\n\t\t}\n\t\tthis.server.send({\n\t\t\taddress,\n\t\t\targs\n\t\t}, host, port);\n\t}\n}"],"file":"UDP.js"}